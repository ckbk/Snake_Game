#include <ncurses.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#define FOOD_MAX 8 // define maximum number of food per board
#define HIGHSCORE_FILE "highscore.dat" // the highscore file

// define the number of game conditions. for all condition < MENU_HIGHSCORE, it is the menu one
enum State {MENU_1P, MENU_2P, MENU_GUIDE, MENU_LICENSE, MENU_HIGHSCORE, HIGHSCORE, MANUAL, LICENSE, GAME_1P, GAME_2P, VICTORY_P1, VICTORY_P2, GAMEOVER, END_GAME};

/***************************************************************************/
/*****************************GRAPHICS_ELEMENTS*****************************/
/***************************************************************************/

// display a single block of element
void display_block (int x, int y, const chtype symbol, int attr_num);

// display the list of foods elements
void display_foods(PointList* foods);

// display the snake, with a difference to its head
void display_snake(PointList* snake, enum Direction current_dir, int attr_num);

// draw border for the gameboard
void draw_border (int xmin, int ymin, int xmax, int ymax, int attr_num);

// print a text out to the terminal
void print_text (char* string, int x, int y, int attr_num); 

// initialize color for the terminal
void color_init ();

// initialize the terminal
void terminal_init (void);

/*************************************************************************/
/***************************GAME_INTERFACE********************************/
/*************************************************************************/

// check user input when not in gameplay
void get_user_input (enum State* stage);

// the game start menu
void start_menu (enum State* stage);

// victory for one of the 2 players
void victory (enum State* stage, Board* board1, Board* board2);

// game over in single player mode
void game_over (enum State* stage, Board* board, int highscore);

// display help menu
void help_menu (enum State* stage);

// license menu
void license (enum State* stage);

// hall of fame or highscore
void hall_of_fame (enum State* stage);

/**************************************************************************/
/******************************HIGHSCORE***********************************/
/**************************************************************************/

// get the highscores from the data file
void get_high_score (int highscores[5]);

// write highscore into file
void write_high_score (int highscores[5]);

// update highscore
int update_highscore (Board* board);

/***************************************************************************/
/*****************************GAMEPLAY_ELEMENTS*****************************/
/***************************************************************************/

// first method of control using UP DOWN RIGHT LEFT arrows
void get_next_move(enum Direction* ctrl1, enum Direction* ctrl2, enum State* stage);

// initialize a single player game
Board* single_player_init (void);

// continue the game for single player mode
void single_player_game (Board* board, int delay, enum Direction* dir, enum State* stage);

// initialize the board to work in multiplayer mode
Board** multiplayer_init (void); 

// continue the game for multiplayer mode
void multiplayer_game (Board* board1, Board* board2, int delay, enum Direction *dir1, enum Direction *dir2, enum State *stage);
